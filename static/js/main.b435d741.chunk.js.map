{"version":3,"sources":["musicFiles/B VOC.mp3","musicFiles/DRUMS.mp3","musicFiles/HE HE VOC.mp3","musicFiles/HIGH VOC.mp3","musicFiles/JIBRISH.mp3","musicFiles/LEAD 1.mp3","musicFiles/UUHO VOC.mp3","musicFiles/_tambourine_shake_higher.mp3","components/MusicTrack.js","components/AllMusic.js","components/Controls.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","MusicTrack","props","_useState","useState","react_default","a","createElement","index_esm","_useState2","Object","slicedToArray","icon","setIcon","audio","useRef","audioButtom","className","concat","color","ref","id","src","track","type","value","onClick","current","muted","AllMusic","tracks","songsColor","map","_ref","_ref2","song","src_components_MusicTrack","key","btnStyle","Controls","_useState3","ri_index_esm","_useState4","loopIcon","setloopIcon","playPuaseBtn","loopBtn","bar","moveBarRef","calPercent","place","whenPlay","document","getElementById","songs","currentTime","linePlace","forEach","style","width","requestAnimationFrame","min","max","step","defaultValue","onChange","Number","toFixed","play","pause","cancelAnimationFrame","loop","songAndColor","B_VOC","DRUMS","HE_HE_VOC","HIGH_VOC","JIBRISH","LEAD_1","UUHO_VOC","tambourine","App","components_AllMusic","components_Controls","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.b435d741.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/B VOC.c435443f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/DRUMS.e3e2854f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/HE HE VOC.4db5581d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/HIGH VOC.d02c4164.mp3\";","module.exports = __webpack_public_path__ + \"static/media/JIBRISH.11a9984b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/LEAD 1.dadfe26a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/UUHO VOC.b68f64b5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/_tambourine_shake_higher.06c14ace.mp3\";","import React, { useState, useRef } from 'react';\r\nimport './MusicTrack.css';\r\n\r\nimport { BsFillVolumeMuteFill } from 'react-icons/bs';\r\nimport { BsFillVolumeUpFill } from 'react-icons/bs';\r\n\r\nconst MusicTrack= (props) =>{\r\n    //state\r\n    const [icon, setIcon] = useState(<BsFillVolumeUpFill/>)\r\n       \r\n    //references\r\n    const audio = useRef();\r\n    const audioButtom = useRef();\r\n\r\n    //mute each track whene btn click\r\n    const muteAudio= () =>{\r\n        if (audio.current.muted){\r\n            audio.current.muted =false;\r\n            audioButtom.current.value='Mute'\r\n            setIcon(<BsFillVolumeUpFill/>)\r\n        } else {\r\n            audio.current.muted =true;\r\n            audioButtom.current.value='Unmute'\r\n            setIcon(<BsFillVolumeMuteFill/>)\r\n        }\r\n    }  \r\n\r\n    return(\r\n        <div>\r\n            <div className='flex justify-center items-center'>\r\n                <div className={`flex justify-end items-center br1 ma1 w-75 h2 bg-${props.color} shadow-3 o-60`}>\r\n                    <audio ref={audio} id={props.id}>\r\n                        <source src={props.track} type=\"audio/mpeg\"></source>\r\n                        Your browser does not support the audio element.\r\n                    </audio>\r\n                    <div className='line' id={props.id+'l'}></div>\r\n                </div>    \r\n                <button \r\n                    ref={audioButtom}\r\n                    value='Mute'\r\n                    className='near-white bg-animate bg-near-black hover-bg-gray inline-flex items-center ma1 br2 pa1 shadow-5'\r\n                    onClick={muteAudio}\r\n                    type=\"button\">{icon}\r\n                </button>       \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicTrack;\r\n","import React from 'react';\r\nimport MusicTrack from './MusicTrack';\r\n\r\nconst AllMusic= (props)=> {\r\n\r\n  //create new MusicTrack component for each loop\r\n  const tracks=props.songsColor.map(([song,color]) =>{\r\n      return(\r\n        <MusicTrack id={song} key={song} track={song} color= {color}/> \r\n      )\r\n    })\r\n\r\n  return (\r\n      <div className='pv2'>\r\n          {tracks}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AllMusic;\r\n\r\n","import React, { useState, useRef } from 'react';\r\n\r\nimport { BsFillStopFill, BsFillPlayFill, BsFillPauseFill } from 'react-icons/bs';\r\nimport { RiRepeat2Fill, RiRepeatOneFill } from 'react-icons/ri';\r\n\r\nconst btnStyle= 'near-white bg-animate bg-near-black hover-bg-gray inline-flex items-center justify-center w3 ma1 shadow-5 br2 pa2'\r\n\r\nconst Controls= (props) => {\r\n    //state\r\n    const [icon, setIcon]= useState(<BsFillPlayFill/>)\r\n    const [loopIcon, setloopIcon]= useState(<RiRepeatOneFill/>)\r\n\r\n    //references\r\n    const playPuaseBtn = useRef();\r\n    const loopBtn = useRef();\r\n    const bar = useRef();\r\n    const moveBarRef = useRef();\r\n\r\n    //control functions- play, stop and loop\r\n    const playAll= ()=>{\r\n        if (playPuaseBtn.current.value ==='Play'){\r\n        props.songs.forEach((song) =>{\r\n            document.getElementById(song).play()\r\n        })\r\n        moveBarRef.current= requestAnimationFrame(whenPlay)\r\n        playPuaseBtn.current.value= 'Puase'\r\n        setIcon(<BsFillPauseFill/>)\r\n        } else {\r\n        props.songs.forEach((song) =>{\r\n            document.getElementById(song).pause()\r\n        })\r\n        cancelAnimationFrame(moveBarRef.current)\r\n        playPuaseBtn.current.value= 'Play'\r\n        setIcon(<BsFillPlayFill/>)\r\n        }\r\n    } \r\n\r\n    const stopMusic= () =>{\r\n        props.songs.forEach((song) =>{\r\n            document.getElementById(song).pause()\r\n            document.getElementById(song).currentTime = 0\r\n        })\r\n        playPuaseBtn.current.value='Play'\r\n        bar.current.value='0'\r\n        setIcon(<BsFillPlayFill/>)\r\n        props.songs.forEach((song) =>{\r\n            const line= document.getElementById(song+'l')\r\n            line.style.width =`100%`\r\n        })\r\n    }\r\n\r\n    const setLoop= ()=>{\r\n        if (loopBtn.current.value ==='Loop'){\r\n        props.songs.forEach((song) =>{\r\n            document.getElementById(song).loop=true;\r\n        })\r\n        loopBtn.current.value= 'Unloop'\r\n        setloopIcon(<RiRepeat2Fill/>)\r\n        } else {\r\n        props.songs.forEach((song) =>{\r\n            document.getElementById(song).loop=false;\r\n        })\r\n        loopBtn.current.value= 'Loop'\r\n        setloopIcon(<RiRepeatOneFill/>)\r\n        }\r\n    }\r\n\r\n    //clculate percent of song based on number (0-17)\r\n    const calPercent= (place) =>{\r\n        const percet= 100-(place*100/17)\r\n        return percet\r\n    }\r\n\r\n    //while playing, change line and bar place\r\n    const whenPlay= () => {\r\n        const place=document.getElementById(props.songs[0]).currentTime\r\n        bar.current.value= place\r\n        const linePlace= calPercent(place)\r\n        props.songs.forEach((song) =>{\r\n            const line= document.getElementById(song+'l')\r\n            line.style.width =`${linePlace}%`\r\n        })\r\n        moveBarRef.current= requestAnimationFrame(whenPlay)\r\n    }\r\n\r\n    //whene range is changed, change song current time and line place\r\n    const chagePlace= ()=> {\r\n        const place= Number(bar.current.value).toFixed(6);\r\n        props.songs.forEach((song) =>{\r\n            document.getElementById(song).currentTime= place;\r\n        })\r\n        const linePlace= calPercent(place)\r\n        props.songs.forEach((song) =>{\r\n            const line= document.getElementById(song+'l')\r\n            line.style.width =`${linePlace}%`\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=''>\r\n            <div>\r\n            <input ref={bar} className='w-75' type='range' min='0' max='17' step='any' defaultValue='0' onChange={chagePlace}></input> \r\n            <div className='dib w2 ml1'></div>\r\n            </div>\r\n            <button \r\n                id='play/pause' ref={playPuaseBtn} value='Play'\r\n                className={btnStyle} onClick={playAll}\r\n                type=\"button\">{icon}\r\n            </button>\r\n            <button \r\n                className={btnStyle} onClick={stopMusic}\r\n                type=\"button\"><BsFillStopFill/>\r\n            </button>\r\n            <button \r\n                ref={loopBtn}\r\n                id='loop/unloop' value='Loop'\r\n                className={btnStyle} onClick={setLoop}\r\n                type=\"button\">{loopIcon}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\nimport './App.css';\n\nimport AllMusic from './components/AllMusic';\nimport Controls from './components/Controls';\nimport { RiCopyrightLine } from 'react-icons/ri';\n\nimport B_VOC from './musicFiles/B VOC.mp3';\nimport DRUMS from './musicFiles/DRUMS.mp3';\nimport HE_HE_VOC from './musicFiles/HE HE VOC.mp3';\nimport HIGH_VOC from './musicFiles/HIGH VOC.mp3';\nimport JIBRISH from './musicFiles/JIBRISH.mp3';\nimport LEAD_1 from './musicFiles/LEAD 1.mp3';\nimport UUHO_VOC from './musicFiles/UUHO VOC.mp3';\nimport tambourine from './musicFiles/_tambourine_shake_higher.mp3';\n\nconst songAndColor= [[B_VOC,'blue'],[DRUMS,'green'],[HE_HE_VOC,'light-purple'],[HIGH_VOC,'yellow'],[JIBRISH,'light-yellow'],[LEAD_1,'pink'],[UUHO_VOC,'light-blue'],[tambourine,'light-red']]\n\nconst songs= [B_VOC,DRUMS,HE_HE_VOC,HIGH_VOC,JIBRISH,LEAD_1,UUHO_VOC,tambourine]\n\n\n\nconst App= ()=>{\n  \n  return (\n    <div className=\"App pv1\">\n      <h1 className=''>Loop Machine</h1>\n      <AllMusic songsColor={songAndColor}/>\n      <Controls songs={songs}/>\n      <div className='flex align-center justify-center pv1'> <RiCopyrightLine/>shacharEtt</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}